version: '3.9'

volumes:
  prometheus_data: {}

networks:
  monitoring_network:

services:

  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: prometheus
    networks:
      - monitoring_network
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=30d'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

  nodeexporter:
    image: prom/node-exporter:v1.7.0
    container_name: nodeexporter
    networks:
      - monitoring_network
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    networks:
      - monitoring_network
    ports:
      - 3000:3000
    user: "1000:991"
    volumes:
      - ./grafana-config:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_oauth_auto_login=true
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

  pushgateway:
    image: prom/pushgateway:v1.6.2
    container_name: pushgateway
    networks:
      - monitoring_network
    restart: unless-stopped
    labels:
      org.label-schema.group: "monitoring"

  loki:
    image: grafana/loki:latest
    container_name: loki
    networks:
      - monitoring_network           
    ports:
      - "3100:3100"
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - /tmp/loki:/tmp/loki  # Mount the directory to ensure Loki can write to it
    command: -config.file=/etc/loki/local-config.yaml

  promtail:
    image: grafana/promtail:latest
    container_name: promtail
    logging: json-file 
    networks:
      - monitoring_network           
    volumes:
      - ./promtail-config.yaml:/etc/promtail/config.yml
      - /home/jo/.local/share/containers/storage/overlay-containers:/home/jo/.local/share/containers/storage/overlay-containers:ro
    command: -config.file=/etc/promtail/config.yml
